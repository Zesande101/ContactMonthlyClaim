using CMCS.Commands;using CMCS.Data;using CMCS.Models;using CMCS.Views;using System.Net;using System.Security.Principal;using System.Windows.Input;namespace CMCS.View_Models{    public class LoginViewModel : ViewModelBase    {        private IUserRepository userRepository;        private string _username;        public string UserName        {            get { return _username;}            set            {                _username = value;                OnPropertyChanged(nameof(UserName));            }        }        private string _password;        public string Password        {            get { return _password;}            set            {                _password = value;                OnPropertyChanged(nameof(Password));            }        }        private string _errorMessage;        public string ErrorMessage        {            get { return _errorMessage; }            set            {                _errorMessage = value;                OnPropertyChanged(nameof(ErrorMessage));            }        }        private bool _isViewVisible = true;        public bool IsViewVisible        {            get { return _isViewVisible; }            set            {                _isViewVisible = value;                OnPropertyChanged(nameof(IsViewVisible));            }        }        public ICommand LoginCommand { get; }        public LoginViewModel()        {            LoginCommand = new RelayCommands(UserLoginBTN, CanExecuteLoginCommand);            userRepository = new UserRepository();        }        private bool CanExecuteLoginCommand()        {            return !string.IsNullOrEmpty(UserName) && !string.IsNullOrEmpty(Password);        }        private void UserLoginBTN()        {            var (isValidUser, jobRole) = userRepository.Authenticator(new NetworkCredential(UserName, Password));            if (isValidUser)            {                Thread.CurrentPrincipal = new GenericPrincipal(new GenericIdentity(UserName), null);                IsViewVisible = false;                ErrorMessage = "Logged In Successfully";                // Redirect based on job role                if (jobRole == "Lecture")                {                    // Redirect to Lecture View                    NavigateToLectureView();                }                else if (jobRole == "Programme Manager" || jobRole == "Co-ordinator")                {                    // Redirect to Review View                    NavigateToAdmin();                }            }            else            {                ErrorMessage = "Invalid username/password!";            }        }        private void NavigateToLectureView()        {            var window = new LectureDashboard();            window.ShowDialog();        }        private void NavigateToAdmin()        {            var window1 = new AdminDashboard();            window1.ShowDialog();        }    }}